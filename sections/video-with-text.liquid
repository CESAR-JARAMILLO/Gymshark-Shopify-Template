{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
  if section.settings.color_scheme == section.settings.section_color_scheme and section.settings.content_layout == 'no-overlap'
    assign remove_color_classes = true
  endif
-%}

<section class="hero-video">
  {% if section.settings.video %}
    {{
      section.settings.video
      | video_tag: autoplay: true, muted: true, loop: true, playsinline: true, class: 'hero-video__background'
    }}
  {% else %}
    {{ 'hero-apparel-1' | placeholder_svg_tag: 'hero-video__background placeholder-svg' }}
  {% endif %}

  <div class="hero-video__overlay">
    {% if section.settings.image %}
      <img
        src="{{ section.settings.image | image_url: width: 1500 }}"
        alt="Hero title"
        class="hero-video__title-image"
        width="{{ section.settings.image.width }}"
        height="{{ section.settings.image.height }}"
        loading="lazy"
      >
    {% endif %}

    {%- for block in section.blocks -%}
      {% case block.type %}
        {% when 'button' %}
          {% if block.settings.button_label != blank %}
            <a
              {% if block.settings.button_link == blank %}
                role="link" aria-disabled="true"
              {% else %}
                href="{{ block.settings.button_link }}"
              {% endif %}
              class="hero-video__cta{% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}"
              {{ block.shopify_attributes }}
            >
              {{ block.settings.button_label | escape }}
            </a>
          {% endif %}
      {% endcase %}
    {%- endfor -%}
  </div>

  <button
    class="hero-video__toggle"
    aria-label="Toggle video"
    type="button"
    onclick="toggleVideo(this)"
  >
    <svg
      class="hero-video__icon--pause"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="currentColor"
      width="20"
      height="20"
    >
      <path d="M6 4h4v16H6zM14 4h4v16h-4z" />
    </svg>
    <svg
      class="hero-video__icon--play"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="currentColor"
      width="20"
      height="20"
      style="display:none;"
    >
      <path d="M8 5v14l11-7z" />
    </svg>
  </button>
</section>

<script>
  function toggleVideo(button) {
    const video = button.closest('.hero-video').querySelector('video');
    const playIcon = button.querySelector('.hero-video__icon--play');
    const pauseIcon = button.querySelector('.hero-video__icon--pause');

    if (video.paused) {
      video.play();
      playIcon.style.display = 'none';
      pauseIcon.style.display = 'inline';
    } else {
      video.pause();
      playIcon.style.display = 'inline';
      pauseIcon.style.display = 'none';
    }
  }
</script>

{% schema %}
{
  "name": "Video with Text",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "video",
      "id": "video",
      "label": "Choose a video"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.image-with-text.settings.image.label"
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.image-with-text.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "t:sections.image-with-text.blocks.heading.settings.heading.default",
          "label": "t:sections.image-with-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            },
            {
              "value": "hxl",
              "label": "t:sections.all.heading_size.options__4.label"
            },
            {
              "value": "hxxl",
              "label": "t:sections.all.heading_size.options__5.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "caption",
      "name": "t:sections.image-with-text.blocks.caption.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "t:sections.image-with-text.blocks.caption.settings.text.default",
          "label": "t:sections.image-with-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.image-with-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.image-with-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.image-with-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.image-with-text.blocks.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.image-with-text.blocks.text.settings.text.default",
          "label": "t:sections.image-with-text.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.image-with-text.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.image-with-text.blocks.text.settings.text_style.options__2.label"
            }
          ],
          "default": "body",
          "label": "t:sections.image-with-text.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.image-with-text.blocks.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "t:sections.image-with-text.blocks.button.settings.button_label.default",
          "label": "t:sections.image-with-text.blocks.button.settings.button_label.label",
          "info": "t:sections.image-with-text.blocks.button.settings.button_label.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.image-with-text.blocks.button.settings.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.image-with-text.blocks.button.settings.outline_button.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Video with Text",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
